# https://github.comkseebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-style bg=colour235,fg=colour136,default # bg=base02, fg=yellow

# increase the history limit
set -g history-limit 10000

# easy reload config
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# set window split
bind-key v split-window -h
bind-key b split-window

# bind '\' split-window -h
# bind '/' split-window

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim # fg=base0
# active window title colors
set-window-option -g window-status-current-style fg=colour33,bg=default,bright # fg=orange
# Set window title format
set-window-option -g window-status-format "#W#{?window_zoomed_flag,#[fg=white]*Z#[default],} " #I for the number
# Set window status format
set-window-option -g window-status-current-format "^#W#{?window_zoomed_flag,#[fg=orange]*Z#[default],} "

# pane border
set-option -g pane-border-style fg=colour235 #fg=base02
set-option -g pane-active-border-style fg=colour240 #fg=base01

# don't exit from tmux when closing a session
set -g detach-on-destroy off
set -g @t-fzf-prompt '>  '

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
# set-window-option -g clock-mode-colour green #green

# to highlight when the prefix mode is activated
# #{?client_prefix,<Prefix>,}

set -g status-interval 1
set -g status-justify left # center align window list
set -g status-left-length 50
set -g status-right-length 140
set -g status-left ''
# this consumes too much resources, let's comment it for now
#set -g status-right '#[fg=black,bg=red,dim]#{?client_prefix,<Prefix>,}#[default]\
##[fg=black,dim]#{cpu_bg_color} CPU#{cpu_icon}#{cpu_percentage}#[default]\
##[fg=black,dim]#{ram_bg_color} RAM#{ram_icon}#{ram_percentage}#[default]\
##[fg=black,dim]#{gpu_bg_color} GPU#{gpu_icon}#{gpu_percentage}#[default]\
##[fg=black,dim]#{gram_bg_color} GRAM#{gram_icon}#{gram_percentage}#[default]\
##[fg=white,dim]#(date +"%H:%M")#[default]\
##[fg=black,bg=white,dim]#(uptime | grep -o "[0-9]* days")#[default]'

# for the internet connection speed
#[fg=black,bg=white,dim] #{download_speed}|#{upload_speed}#[default]\

# C-b is not acceptable -- Vim uses it
# prefix is remapped to Alt+M
set-option -g prefix C-b
bind-key C-b last-window
# unbind-key C-b
# set-option -g prefix C-a
# bind-key C-a send-prefix
unbind-key C-h

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D
# To remap the list of session
bind -n M-s choose-session -Z

# Sot switch around all windows
# we don't need those anymore since i can navigate left <-> right
# bind -n M-Tab next-window
# bind -n M-S-Tab previous-window

bind -n M-L next-window
bind -n M-H previous-window
bind -n M-BTab previous-window
bind -n M-Pagedown next-window
bind -n M-Pageup previous-window

# to keep the panel be the only available
bind -n M-z resize-pane -Z

# to resize with hjkl
bind-key -r -T prefix C-k resize-pane -U
bind-key -r -T prefix C-j resize-pane -D
bind-key -r -T prefix C-h resize-pane -L
bind-key -r -T prefix C-l resize-pane -R

# to split vertically or horizontally
# bind-key -r -T prefix       C-l               resize-pane -R
# Disable clock mode
# bind -n M-t clock-mode

# vertical split
bind -n M-B split-window -h -c "#{pane_current_path}"
# Horizontal split ( with 25% )
bind -n M-b split-window -v -p 25

# To confirm before jeleting the current panel
bind -n M-x confirm-before -p "kill pane '#P'? (y/n)" kill-pane
# To delete a Window
bind -n M-w confirm-before -p "kill window '#W'? (y/n)" kill-window
# To delete a session
bind -n M-i confirm-before -p "kill session '#S'? (y/n)" kill-session
# To search for a window
bind -n M-f command-prompt "find-window -Z -- '%%'"
# create a new window
bind -n M-c new-window -c "#{pane_current_path}"
# to create a new session with Alt+Shift+C
bind -n M-C new-session
# rename a new window
bind -n M-, command-prompt -I "#W" "rename-window -- '%%'"
# rename a new session
bind -n M-\$ command-prompt -I "#S" "rename-session -- '%%'"
# the copy mode to scroll and vi stuffs
bind -n M-m copy-mode
# bind-key -T copy-mode-vi = split-window -h -p 90 'seq 24 -1 1;sleep 15'\;  swap-pane -dU

# to create a new session
# bind -n M-n new

# Enable mouse control (clickable windows, panes, resizable panes)
# Enable mouse mode (tmux 2.1 and above)
set -g mouse off

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 50

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-b a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# set to main-horizontal, 66% height for main pane
bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
# bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# status bar
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 2\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set-option -g status-utf8 on'

# rm mouse mode fail
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\)' 'set -g mouse off'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'

# fix pane_current_path on new window and splits
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind "%"; bind % split-window -h -c "#{pane_current_path}"'


# Colors
# How to use true colors in vim under tmux? # 1246 for 2.6 and higher
# https://github.com/tmux/tmux/issues/1246:
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
# 2.5 and lower:
# set -g default-terminal "screen-256color"

# Doesn't work on iterm2 / mac
# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \)'" 'set -g default-terminal "tmux-256color"'
# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \)'" 'set -ga terminal-overrides ",*256col*:Tc"'

# Try screen256-color (https://github.com/tmux/tmux/issues/622):
# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \)'" 'set -g default-terminal "screen-256color"'
# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \)'" 'set -ga terminal-overrides ",screen-256color:Tc"'

# if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 6\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g default-terminal "screen-256color"'

# Continuum saving mytmux env
set -g @continuum-restore 'on'

# Tmux plugins :
# to persist my configuration
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# To search and paste inside the clipboard anything visible on tmux pane
# using fzf by hitting Ctrl+B Tab
set -g @plugin 'laktak/extrakto'

# To manage my tmux with fzf (not seeing any utility for it now)
set -g @plugin 'sainnhe/tmux-fzf'

# A way to jump on stuff while on terminal vimium mode
# will fix later...doesn't seems to  work or there is some conflicts
set -g @plugin 'schasse/tmux-jump'
# set -g @jump-key 'j'

# for showing cpu/gpu/ram infos
# set -g @plugin 'tmux-plugins/tmux-cpu'

# For more details on panes title
# requirements :
# python3 -m pip install --user libtmux==0.16.1
# python3 -m pip install dataclasses --user
# set -g @plugin 'ofirgall/tmux-window-name'

# for the tmux session wizard
# or just hit tt
# set -g @plugin '27medkamal/tmux-session-wizard'

# For session manager (to create a new session really simply and fast)
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'

# For the internet speed
# set -g @plugin 'tmux-plugins/tmux-net-speed'

# For reload tmux on configuration update not needed
set-option -g @plugin 'b0o/tmux-autoreload'
set-option -g @tmux-autoreload-entrypoints '~/.config/tmux/tmux.conf'

# set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin 'dracula/tmux'
# set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/block/gray'
# set -g @themepack 'powerline/default/gray'
# set -g @plugin 'wfxr/tmux-power'
# # we set our them mode
# set -g @tmux_power_theme 'moon'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
